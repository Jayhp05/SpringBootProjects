<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--	
	마이바티스 참고 사이트
	  - http://blog.mybatis.org/
	  - http://www.mybatis.org/mybatis-3/ko/index.html
	  
	@Mapper 애노테이션이 적용된 인터페이스와 맵퍼 XML파일은
	namespace 속성으로 연결되기 때문에 맵퍼 XML의 namespace를
	지정할 때 @Mapper 애노테이션이 적용된 맵퍼 인터페이스의
	완전한 클래스 이름(패키지를 포함한 이름)을 지정하면 된다.   
-->
<mapper namespace="com.springbootstudy.app.mapper.MemoMapper" >
	<select id="findAll" resultType="Memo">
		SELECT * FROM memo;
	</select>

	<!--
		resultType 속성에는 SQL 문의 조회 결과를 저장할 데이터 타입을
		지정하는 속성으로 자바 원시 타입(기본 타입, String)과 자바빈,
		Map과 같은 타입을 지정할 수 있다. 자바 원시 타입은 생략 가능하다.
				
		맵퍼 인터페이스에서 이 맵핑 구문을 호출하는 findById(int no)
		메서드의 파라미터로 입력한 값은 #{변수명}과 같이 지정하면 된다. 
	-->
	<select id="findByNo" resultType="Memo">
		SELECT * FROM memo
		WHERE no = #{no}
	</select>
	
	<!--
		parameterType 속성에는 DB에 입력할 데이터나 SQL 문의 조건에 사용할
		데이터 타입을 지정하는 속성으로 resultType 속성에서 사용할 수 있는
		데이터 타입을 주로 사용하며 자바 원시 타입은 생략 가능하다.
		
		테이블에 하나의 레코드를 INSERT 할때 자동으로 증가되는 컬럼이나
		Sequence를 사용하는 컬럼의 값을 읽어 와야 할 때도 있다.
		보통 자동 증가되는 컬럼의 값은 데이터가 INSERT 된 후에 읽어오고
		Sequence일 경우 INSERT 이전에 값을 읽어 와야 한다.
		이렇게 INSERT 작업을 하면서 생성된 키의 값을 읽어 와야 할 경우
		아래와 같이 useGeneratedKeys="true"를 지정하고 자동 생성된
		키의 값을 설정할 자바 모델 객체의 프로퍼티 이름을 keyProperty에
		지정하면 Memo 객체의 no 프로퍼티에 값을 설정해 준다.			
		
		parameterType에 도메인 클래스 타입을 지정하는 경우 SQL 쿼리의
		VALUES()에 지정하는 값은 도메인 클래스의 getter 메서드를 지정하는
  		것이 아니라 클래스의 프로퍼티(인스턴스 변수)를 아래와 같이 #{}로
  		감싸서 지정하면 MyBatis가 알아서 처리해 준다.
	-->
	<insert id="addMemo" parameterType="Memo"
		useGeneratedKeys="true" keyProperty="no">
		INSERT INTO memo(title, content, writer, reg_date)
		VALUES(#{title}, #{content}, #{writer}, NOW())
	</insert>
	
	<update id="updateMemo" parameterType="Memo">
		UPDATE memo
		SET title=#{title}, content=#{content}, writer=#{writer}, reg_date=NOW()
		WHERE no=#{no}
	</update>

	<delete id="deleteMemo" >
		DELETE FROM memo		
		WHERE no=#{no}
	</delete>	
</mapper>	



