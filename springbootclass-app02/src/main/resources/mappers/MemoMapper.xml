<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
	마이바티스 참고 사이트- http://blog.mybatis.org/- http://www.mybatis.org/mybatis-3/ko/index.html
 	@Mapper 애노테이션이 적용된 인터페이스와 맵퍼 XML파일은
	namespace 속성으로 연결되기 때문에 맵퍼 XML의 namespace를
	지정할 때 @Mapper 애노테이션이 적용된 맵퍼 인터페이스의
	완전한 클래스 이름(패키지를 포함한 이름)을 지정하면 된다. -->
<mapper namespace="com.springbootstudy.app.mapper.MemoMapper" >

	<insert id="addMemo" parameterType="Memo" useGeneratedKeys="true" keyProperty="no">
		INSERT INTO memo(title, content, writer, reg_date)
		VALUES(#{title}, #{content}, #{writer}, NOW())
	</insert>
	
	<update id="updateMemo" parameterType="Memo">
 		UPDATE memo
 		SET title=#{title}, content=#{content}, writer=#{writer}, reg_date=NOW()
 		WHERE no=#{no}
 	</update>
 	
 	<delete id="deleteMemo">
 		DELETE FROM memo
 		WHERE no=#{no}
 	</delete>

	<select id="findAll" resultType="Memo">
 		SELECT * FROM memo ORDER BY no DESC
	</select>
<!--
	resultType 속성에는 SQL 문의 조회 결과를 저장할 데이터 타입을
	지정하는 속성으로 자바 원시 타입(기본 타입, String)과 자바빈,
 	Map과 같은 타입을 지정할 수 있다. 자바 원시 타입은 생략 가능하다. 
	맵퍼 인터페이스에서 이 맵핑 구문을 호출하는 findById(int no)
	메서드의 파라미터로 입력한 값은 #{변수명}과 같이 지정하면 된다.-->
	<select id="findById" resultType="Memo">
 		SELECT * FROM memo
 		WHERE no=#{no}
 	</select>
 	
</mapper>